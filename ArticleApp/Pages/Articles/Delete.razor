@page "/Articles/Delete/{Id:int}"

@inject IArticleRepository ArticleRepository
@inject NavigationManager NavigationManager 
@inject IJSRuntime JS 

<h3>Delete다</h3>


@if (Model == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="id">ID: </label> @Model.Id.ToString()
                </div>

                <div class="form-group">
                    <label for="title">Title: </label> @Model.Title
                </div>

                <div class="form-group">
                    <label for="title">Content: </label>
                    <hr />
                    @Model.Content
                </div>

                <div class="form-group">
                    <a href="/Articles/Delete/@Model.Id" class="btn btn-danger" @onclick="btnDelete_Click">Delete</a>
                    <a href="/Articles/" class="btn btn-primary">Cancel</a>
                </div>
            </div>

        </div>

    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }


    public Article Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await ArticleRepository.GetArticleByIdAsync(Id);
    }

    protected async void btnDelete_Click()
    {
        //if (window.confirm("")) {}
        bool isDelete = await JS.InvokeAsync<bool>("confirm", $"{Id}번 글을 정말로 삭제하시겠습니까?");

        if (isDelete)
        {
            await ArticleRepository.DeleteArticleAsync(Id); //삭제
            NavigationManager.NavigateTo("/Articles");//리스트 페이지로 이동 
        }
        else
        {
            //window.alert("");
            await JS.InvokeAsync<object>("alert", "취소되었습니다.");
        }
    }
}