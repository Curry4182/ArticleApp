@page "/Articles"
@page "/Articles/Index"

@using ArticleApp.Models
@using Dul.Web
@using Dul.Domain.Common
@using ArticleApp.Pages.Articles.Components

@inject IArticleRepository ArticleRepository


<h3>Index</h3>

<div>
    <a href="/Articles/Create" class="btn btn-primary">Create</a>

    <AuthorizeView>
        <Authorized>
        </Authorized>
        <NotAuthorized>
            <a href="/Articles/Manage" class="btn btn-primary">Manage</a>
        </NotAuthorized>
    </AuthorizeView>
    <AuthorizeView Roles="Administrators, Managers">
        <a href="/Articles/Manage" class="btn btn-primary">Manage</a>
    </AuthorizeView>
</div>


@if (articles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered table-striped table-hover">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Created</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var article in articles)
            {
                <tr>
                    <td>@article.Id</td>
                    <td>@article.Title</td>
                    <td>@article.Created.ToShortTimeString()</td>
                    <td>
                        <a href="/Articles/Details/@article.Id" class="btn btn-light">Details</a>
                        <a href="/Articles/Edit/@article.Id" class="btn btn-light">Edit</a>
                        <a href="/Articles/Delete/@article.Id" class="btn btn-light">Delete</a>
                    </td>
                </tr>

            }
        </tbody>
    </table>
}

<ArticlePager Model="pager" PageIndexChanged="PageIndexChanged"></ArticlePager>


@code {

    //페이저 기본값 설정
    private PagerBase pager;

    private IEnumerable<Article> articles;

    protected override async Task OnInitializedAsync()
    {
        pager = new PagerBase()
        {
            PageNumber = 1,//처음시작할 페이지
            PageIndex = 0, //처음시작 페이지, 1페이지는 0번째 인덱스
            PageSize = 2, //한페이지에 표시될 아이템
            PagerButtonCount = 3 //보여질 페이지 버튼 개수
        };

        //[1] 전체데이터 모두 출력
        //articles = await ArticleRepository.GetArticlesAsync();

        //[2] 페이징 처리된 데이터만 출력
        PagingResult<Article> pagingData = await ArticleRepository.GetAllAsync(pager.PageIndex, pager.PageSize);

        pager.RecordCount = pagingData.TotalRecords; // 총 레코드 수
        articles = pagingData.Records; //페이징 처리된 레코드
    }

    private async void PageIndexChanged(int pageIndex)
    {
        pager.PageIndex = pageIndex;
        pager.PageNumber = pageIndex + 1;

        var pagingData = await ArticleRepository.GetAllAsync(pager.PageIndex, pager.PageSize);
        pager.RecordCount = pagingData.TotalRecords; // 총 레코드 수
        articles = pagingData.Records; //페이징 처리된 레코드

        StateHasChanged(); //현재 컴포넌트 재로드
    }
}