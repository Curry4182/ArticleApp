@page "/Articles/Manage"

@using ArticleApp.Models
@using Dul.Web
@using Dul.Domain.Common
@using ArticleApp.Pages.Articles.Components

@inject IArticleRepository ArticleRepository
@inject IJSRuntime JSRuntime

<h3>Manage</h3>

<div>
    <a href="/Articles/Create" class="btn btn-primary">Create</a>

</div>
@if (articles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered table-striped table-hover">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Created</th>
                <th>IsPinned</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var article in articles)
            {
            <tr>
                <td>@article.Id</td>
                <td>@article.Title</td>
                <td>@article.Created.ToShortTimeString()</td>
                <td>
                    <a href="/Articles/Details/@article.Id" class="btn btn-light">Details</a>
                    <a href="/Articles/Edit/@article.Id" class="btn btn-light">Edit</a>
                    <a href="/Articles/Delete/@article.Id" class="btn btn-light">Delete</a>
                </td>
                <td>@(article.IsPinned ? "공지":"") </td>
                <td>
                    <input type="button" value="공지글로 올리기" class="btn btn-light" @onclick="@(() => PinnedBy(article))" />
                </td>
            </tr>

            }
        </tbody>
    </table>
}

<ArticlePager Model="pager" PageIndexChanged="PageIndexChanged"></ArticlePager>

@if (_isShow)
{
    <div class="modal fade d-block show" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">공지글로 올리기</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>@(_article.Id)번글을 를 공지글로 설정할까요?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="btnTogglePinned_Click">설정</button>
                    <button type="button" class="btn btn-secondary" @onclick="btnClose_Click">닫기</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private Article _article = new Article(); // 선택한 항목 관리

    private bool _isShow = false; //Notice Modal

    private void PinnedBy(Article article)
    {
        _article = article;
        _isShow = true;
        //JSRuntime.InvokeAsync<object>("alert", $"{article.Id}를 공지글로 설정합니다");
    }

    //페이저 기본값 설정
    private PagerBase pager;

    private IEnumerable<Article> articles;

    private void btnClose_Click()
    {
        _isShow = false;
        _article = new Article();
    }

    private async void btnTogglePinned_Click()
    {
        _article.IsPinned = !(_article.IsPinned); //Toggle
        Console.WriteLine("r: " + _article.IsPinned);
        await ArticleRepository.EditArticleAsync(_article);
        _isShow = false; // Modal Close
        StateHasChanged();

        PagingResult<Article> pagingData = await ArticleRepository.GetAllAsync(pager.PageIndex, pager.PageSize);
        pager.RecordCount = pagingData.TotalRecords; // 총 레코드 수
        articles = pagingData.Records; //페이징 처리된 레코드
    }
    protected override async Task OnInitializedAsync()
    {
        pager = new PagerBase()
        {
            PageNumber = 1,//처음시작할 페이지
            PageIndex = 0, //처음시작 페이지, 1페이지는 0번째 인덱스
            PageSize = 2, //한페이지에 표시될 아이템
            PagerButtonCount = 3 //보여질 페이지 버튼 개수
        };

        //[1] 전체데이터 모두 출력
        //articles = await ArticleRepository.GetArticlesAsync();

        //[2] 페이징 처리된 데이터만 출력
        PagingResult<Article> pagingData = await ArticleRepository.GetAllAsync(pager.PageIndex, pager.PageSize);
        pager.RecordCount = pagingData.TotalRecords; // 총 레코드 수
        articles = pagingData.Records; //페이징 처리된 레코드
    }

    private async void PageIndexChanged(int pageIndex)
    {
        pager.PageIndex = pageIndex;
        pager.PageNumber = pageIndex + 1;

        var pagingData = await ArticleRepository.GetAllAsync(pager.PageIndex, pager.PageSize);
        pager.RecordCount = pagingData.TotalRecords; // 총 레코드 수
        articles = pagingData.Records; //페이징 처리된 레코드

        StateHasChanged(); //현재 컴포넌트 재로드
    }
}